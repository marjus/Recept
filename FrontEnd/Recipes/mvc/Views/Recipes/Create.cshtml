@model Rcpt.ViewModels.EditRecipeVM

@{
    ViewBag.Title = "Nytt recept";
}
<br />


@using (Html.BeginForm("Create", "Recipes", FormMethod.Post, new { @class = "well form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <fieldset>
        <legend>Nytt recept</legend>
        <div class="form-group">
        @Html.LabelFor(model => model.Recipe.Title, new { @class = "col-lg-2 control-label" })
        <div class="col-lg-10">
            @Html.EditorFor(model => model.Recipe.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Titel" } })
            @Html.ValidationMessageFor(model => model.Recipe.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Recipe.Description, new { @class = "col-lg-2 control-label" })
        <div class="col-lg-10">
            @Html.EditorFor(model => model.Recipe.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Beskrivning" } })
            @Html.ValidationMessageFor(model => model.Recipe.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    
        
        <div id="SubRecipeList">
            @for (int i = 0; i < Model.Recipe.SubRecipes.Count(); i++)
                {
                <fieldset>
                    @if (i > 0)
                    { 
                        <legend>Delrecept @(i)</legend>
                    
                        <div class="form-group">
                            @Html.LabelFor(model => model.Recipe.SubRecipes[i].Title, new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.EditorFor(s => Model.Recipe.SubRecipes[i].Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Titel" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Recipe.SubRecipes[i].Description, new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-10">
                                @Html.EditorFor(s => Model.Recipe.SubRecipes[i].Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Beskrivning" } })
                            </div>
                        </div>
                    }
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Recipe.SubRecipes[i].Category.Category, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.DropDownListFor(s => Model.Recipe.SubRecipes[i].Category.ID, new SelectList(Model.AllRecipeCategories, "ID", "Category", Model.Recipe.SubRecipes[i].Category.ID), new { @class = "form-control" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Recipe.SubRecipes[i].Process, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextAreaFor(s => Model.Recipe.SubRecipes[i].Process, 10, 55,  new { @class = "form-control", placeholder = "Så här gör du" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Recipe.SubRecipes[i].IngredientsText, new { @class = "col-lg-2 control-label" })
                        <div class="col-md-6">
                            @Html.TextAreaFor(s => Model.Recipe.SubRecipes[i].IngredientsText, 10, 55, new { @class = "form-control IngredientsText", placeholder = "Ingredienser" })
                            <span class="help-block">Mängd, enhet och ingrediensnamn. Exempel: 1 kg potatis, 200 g vetemjöl</span>
                        </div>
                        <div class="col-md-4">

                            <span id="IngredientList">

                            </span>

                        </div>
                    </div>
                    
                </fieldset>


            }
        </div>
    
        <div class="row" id="validationrow">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
        <div class="form-group">
            <div class="col-lg-10 col-lg-offset-2">
                <input type="submit" value="Spara" class="btn btn-default" />  @Html.ActionLink("Tillbaka", "Index")
                </div></div>

    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        var timer;

        $(".IngredientsText").bind('paste', function () {
            GetParsedIngredients($(".IngredientsText").val());
        });

        $(".IngredientsText").bind('input keyup', function () {
            clearTimeout(timer);
            timer = setTimeout(function () { GetParsedIngredients($(".IngredientsText").val()) }, 1500);
        });

        function ParseIngredients()
        {
            var rowStr = "";
            var units = $("#KnownUnits").val();
            var ingredientList = $("#IngredientList");

            ingredientList.empty();

            var ingredients = $(".IngredientsText").val().split(/\r|\n/);

            $.each(ingredients, function (k) {
                rowStr += "<tr><td>" + ingredients[k] + "</td></tr>";
            });

          ingredientList.html("<table><tbody>" + rowStr + "</tbody></table>");
        }

        function GetParsedIngredients(ingredientInput)
        {
            var ingredientList = $("#IngredientList");
            var rowStr = "";

            var data = {
                "IngredientInputStr": ingredientInput
            };

            $.ajax({
                type: 'POST',
                url: '/API/Recipes/ParseIngredients',
                data: JSON.stringify(data),
                contentType: "application/json",
                dataType: 'json',
                success: function (result) {
                    ingredientList.empty();
                    $.each(result, function (key, value) {
                        rowStr += "<tr><td class=\"ingAmount\">" + value.Amount + "</td><td class=\"ingUnit\">" + value.Unit + "</td><td>" + value.Name + "</td></tr>";
                    });
                    var tHead = "<thead><tr><th class=\"ingAmount\">Mängd</th><th class=\"ingUnit\">Enhet</th><th>Ingrediens</th></tr><thead>";
                    ingredientList.html("<table>" + tHead +"<tbody>" + rowStr + "</tbody></table>");
                },
                error: function (request, textStatus, errorThrown) {
                    alert("failure");
                }
            });
        }

    </script>
}
